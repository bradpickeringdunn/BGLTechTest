//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BGL.Web.GitService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GitService.IGitService")]
    public interface IGitService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGitService/LoadGitUser", ReplyAction="http://tempuri.org/IGitService/LoadGitUserResponse")]
        BGL.Services.Api.Models.Result.GetUserResult LoadGitUser(BGL.Services.Api.Models.Request.GetUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGitService/LoadGitUser", ReplyAction="http://tempuri.org/IGitService/LoadGitUserResponse")]
        System.Threading.Tasks.Task<BGL.Services.Api.Models.Result.GetUserResult> LoadGitUserAsync(BGL.Services.Api.Models.Request.GetUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGitService/GetRepositories", ReplyAction="http://tempuri.org/IGitService/GetRepositoriesResponse")]
        BGL.Services.Api.Models.Result.GetRepositoriesResult GetRepositories(BGL.Services.Api.Models.Request.GetRepositoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGitService/GetRepositories", ReplyAction="http://tempuri.org/IGitService/GetRepositoriesResponse")]
        System.Threading.Tasks.Task<BGL.Services.Api.Models.Result.GetRepositoriesResult> GetRepositoriesAsync(BGL.Services.Api.Models.Request.GetRepositoriesRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGitServiceChannel : BGL.Web.GitService.IGitService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GitServiceClient : System.ServiceModel.ClientBase<BGL.Web.GitService.IGitService>, BGL.Web.GitService.IGitService {
        
        public GitServiceClient() {
        }
        
        public GitServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GitServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GitServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GitServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BGL.Services.Api.Models.Result.GetUserResult LoadGitUser(BGL.Services.Api.Models.Request.GetUserRequest request) {
            return base.Channel.LoadGitUser(request);
        }
        
        public System.Threading.Tasks.Task<BGL.Services.Api.Models.Result.GetUserResult> LoadGitUserAsync(BGL.Services.Api.Models.Request.GetUserRequest request) {
            return base.Channel.LoadGitUserAsync(request);
        }
        
        public BGL.Services.Api.Models.Result.GetRepositoriesResult GetRepositories(BGL.Services.Api.Models.Request.GetRepositoriesRequest request) {
            return base.Channel.GetRepositories(request);
        }
        
        public System.Threading.Tasks.Task<BGL.Services.Api.Models.Result.GetRepositoriesResult> GetRepositoriesAsync(BGL.Services.Api.Models.Request.GetRepositoriesRequest request) {
            return base.Channel.GetRepositoriesAsync(request);
        }
    }
}
